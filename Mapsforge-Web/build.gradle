/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    api 'org.mapsforge:mapsforge-map-awt:0.8.0'
	api 'org.mapsforge:mapsforge-themes:0.8.0'
	api 'com.kitfox.svg:svg-salamander:1.0'
	api 'ch.qos.logback:logback-classic:1.1.3'
	api 'org.codehaus.groovy:groovy-all:2.4.0'
	api 'commons-io:commons-io:2.5'
	api group: 'io.netty', name: 'netty-all', version: '4.1.12.Final'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

task start(type: JavaExec) {
	// TODO: Make better settings for classpath.
	main 'org.mapsforge.ws.HttpServer'
	classpath sourceSets.main.runtimeClasspath
}
